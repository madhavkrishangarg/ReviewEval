numReflections = 2
from gemini import *


def getReflectionPrompt(problemStatement, givenResponse, api_key):
    reflection_prompt_generator = f"""
    You are a generative language model (LLM X) tasked with reflecting on the response generated by another LLM (LLM Y) in response to the following problem statement:

    Problem Statement: {str(problemStatement)}

    Given Response: {str(givenResponse)}

    Reflect on the quality of the response generatmain eed by LLM Y and provide constructive feedback on the following aspects:

    1. Clarity and coherence of the response.
    2. Relevance and alignment of the response with the problem statement.
    3. Logical consistency and evidence support in the response.
    4. Originality and creativity in the response.
    5. Suggestions for improvement and enhancement of the response.
    6. Anything else which you feel should be improved or modified in the response.

    Generate a detailed reflection that critically evaluates the response and provides insights on how it can be improved to better address the problem statement. Note that your response will be fed directly to LLM Y for further refinement.
    """
    reflection_prompt = get_gemini_response(
        reflection_prompt_generator, problemStatement, givenResponse, api_key
    )

    return reflection_prompt


def reflect(
    problemStatement, givenResponse, document, numReflections, api_key
):  # problemStatement is the system_ins
    for i in range(numReflections):
        reflection_prompt = getReflectionPrompt(problemStatement, givenResponse, api_key)
        newPrompt = (
            "This was the response given by you in the previous iteration \n\n"
            + str(givenResponse)
            + "\n\n I want you to take the following feedback and give me a refined response based on those points. Give me the complete refined response again, not just refinements.\n\n"
            + str(reflection_prompt)
        )
        newResponse = get_gemini_response(
            str(problemStatement) + str(newPrompt),
            "Give me the refined response based on the feedback",
            str(document), api_key
        )   
        givenResponse = newResponse
    return givenResponse
